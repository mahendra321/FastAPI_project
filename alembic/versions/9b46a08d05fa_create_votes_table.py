"""create votes table

Revision ID: 9b46a08d05fa
Revises: 9cdaa79397bf
Create Date: 2025-05-18 08:19:55.170185

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '9b46a08d05fa'
down_revision: Union[str, None] = '9cdaa79397bf'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('votes',
    sa.Column('post_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['post_id'], ['posts.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['all_users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('post_id', 'user_id')
    )
    op.add_column('all_users', sa.Column('user_name', sa.String(), nullable=False))
    op.add_column('all_users', sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False))
    op.drop_constraint('all_users_email_key', 'all_users', type_='unique')
    op.drop_column('all_users', 'created at')
    op.drop_column('all_users', 'email')
    op.alter_column('posts', 'published',
               existing_type=sa.BOOLEAN(),
               nullable=True,
               existing_server_default=sa.text('true'))
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('posts', 'published',
               existing_type=sa.BOOLEAN(),
               nullable=False,
               existing_server_default=sa.text('true'))
    op.add_column('all_users', sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('all_users', sa.Column('created at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False))
    op.create_unique_constraint('all_users_email_key', 'all_users', ['email'])
    op.drop_column('all_users', 'created_at')
    op.drop_column('all_users', 'user_name')
    op.drop_table('votes')
    # ### end Alembic commands ###
